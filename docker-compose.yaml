services:
  db:
    image: postgres:16-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
      target: dev
    container_name: backend
    environment:
      NODE_ENV: development
      PORT: ${BACKEND_PORT}
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      target: dev
    container_name: frontend
    environment:
      FRONTEND_PORT: ${FRONTEND_PORT}
      VITE_API_BASE: http://localhost:${BACKEND_PORT}
      CHOKIDAR_USEPOLLING: "1"
    command: npm run dev -- --host 0.0.0.0 --port ${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules


volumes:
  dbdata:
